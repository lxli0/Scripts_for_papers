clc,clear
load('lajolla.mat')
lajolla=lajolla(20:150,:);
%% load data
Pressure=10^8*[0.03	0.1	0.25	0.5	1	2	4	6	8	10];
Velocity=[
    5.75	6.06	6.269	6.498	6.663	6.785	6.858	6.9	6.926	6.95
5.33	5.852	6.14	6.384	6.555	6.786	6.897	6.963	7	7.029
5.815	5.962	6.149	6.335	6.517	6.65	6.742	6.801	6.84	6.87
4.59	5.715	6.1	6.268	6.382	6.454	6.536	6.594	6.636	6.666
5.225	6.038	6.199	6.284	6.367	6.443	6.559	6.639	6.687	6.723
3.951	5.597	5.916	6.141	6.264	6.351	6.426	6.474	6.512	6.542
5.575	5.881	6.111	6.261	6.371	6.442	6.515	6.567	6.617	6.648
5.735	6.027	6.142	6.2	6.249	6.294	6.364	6.41	6.447	6.48
5.74	6	6.169	6.295	6.407	6.496	6.57	6.613	6.653	6.683
5.88	6.235	6.301	6.347	6.403	6.476	6.553	6.606	6.647	6.675
5.75	6.165	6.257	6.31	6.369	6.429	6.485	6.526	6.557	6.579
5.75	6.076	6.175	6.255	6.323	6.392	6.439	6.475	6.5	6.521
5.86	6.12	6.184	6.233	6.292	6.358	6.43	6.472	6.504	6.528
5.39	6.05	6.089	6.152	6.232	6.331	6.435	6.491	6.532	6.563
5.35	5.96	6.154	6.228	6.3	6.366	6.44	6.488	6.514	6.526
5.535	6.42	6.6	6.729	6.827	6.904	6.979	7.032	7.088	7.133
5.86	6.26	6.505	6.622	6.713	6.784	6.864	6.915	6.952	6.99
5.2	5.934	6.409	6.638	6.777	6.884	6.994	7.063	7.105	7.137
6.25	6.364	6.483	6.606	6.763	6.82	6.887	6.951	6.99	7.012
6.22	6.462	6.577	6.684	6.78	6.868	6.939	6.977	6.986	6.993
6.065	6.242	6.401	6.565	6.703	6.808	6.863	6.901	6.931	6.946
6.065	6.173	6.282	6.343	6.406	6.453	6.506	6.529	6.553	6.557
6.15	6.304	6.369	6.405	6.459	6.511	6.566	6.599	6.633	6.668
6.125	6.199	6.291	6.35	6.422	6.46	6.495	6.52	6.545	6.557
6.25	6.437	6.489	6.548	6.597	6.625	6.656	6.682	6.727	6.751
6.28	6.509	6.568	6.605	6.661	6.722	6.795	6.843	6.883	6.912
6.145	6.32	6.389	6.433	6.487	6.546	6.582	6.594	6.599	6.601
6.68	6.886	6.932	6.96	6.994	7.04	7.091	7.131	7.162	7.175
5.15	6.35	6.458	6.537	6.654	6.807	7.009	7.092	7.161	7.209
6.22	6.735	6.811	6.864	6.93	7.016	7.121	7.188	7.24	7.278
6.622	6.754	6.846	6.899	6.96	7	7.043	7.077	7.105	7.128
6.701	6.892	6.957	6.982	7.02	7.051	7.096	7.139	7.177	7.214
6.82	6.962	7.011	7.054	7.101	7.142	7.192	7.223	7.246	7.26
5.35	6.06	6.449	6.699	6.812	6.885	6.962	7.014	7.045	7.061
5.915	6.493	6.617	6.691	6.765	6.848	6.944	7.007	7.047	7.085
4.56	5.221	6.007	6.394	6.572	6.807	6.96	7.058	7.137	7.202
6.01	6.195	6.297	6.398	6.535	6.616	6.688	6.724	6.759	6.799
6.57	6.772	6.832	6.864	6.913	6.968	7.052	7.103	7.147	7.177
5.93	6.24	6.443	6.608	6.769	6.896	6.971	7.01	7.055	7.095
4.74	5.404	6.52	6.676	6.84	6.953	7.036	7.09	7.128	7.163
6.36	6.75	6.878	6.974	7.078	7.19	7.312	7.387	7.445	7.492
4.74	5.365	6.439	6.76	6.937	7.054	7.15	7.193	7.232	7.258
6.585	6.754	6.832	6.88	6.93	6.978	7.02	7.064	7.09	7.105
6.825	6.905	6.942	6.966	6.99	7.02	7.063	7.1	7.134	7.166
4.585	5.204	6.253	6.83	7.059	7.135	7.212	7.263	7.294	7.319
5.55	6.322	6.797	6.977	7.077	7.145	7.225	7.266	7.3	7.328
6.055	6.565	6.834	6.772	6.866	6.97	7.089	7.154	7.196	7.228
6.78	6.914	6.966	7.019	7.129	7.2	7.274	7.327	7.373	7.409
6.71	6.809	6.877	6.95	7.041	7.109	7.173	7.206	7.225	7.246
6.575	6.805	6.993	7.049	7.115	7.179	7.228	7.261	7.282	7.298
3.2	3.352	3.484	3.565	3.611	3.651	3.691	3.712	3.725	3.732
3.3	3.415	3.467	3.525	3.588	3.637	3.681	3.704	3.717	3.719
3.31	3.36	3.405	3.464	3.527	3.585	3.638	3.665	3.676	3.679
2.65	3.215	3.429	3.574	3.687	3.744	3.782	3.803	3.816	3.822
2.85	3.22	3.295	3.36	3.419	3.475	3.543	3.57	3.582	3.59
2.8	3.24	3.384	3.499	3.566	3.608	3.651	3.673	3.683	3.688
3.19	3.305	3.353	3.384	3.421	3.478	3.552	3.591	3.621	3.634
3.35	3.397	3.437	3.481	3.534	3.586	3.635	3.667	3.687	3.7
3.24	3.39	3.471	3.541	3.612	3.658	3.698	3.718	3.729	3.733
3.16	3.277	3.315	3.351	3.408	3.477	3.533	3.551	3.559	3.564
3.15	3.315	3.376	3.411	3.4377	3.465	3.48	3.487	3.488	3.489
3.1	3.255	3.304	3.341	3.376	3.422	3.451	3.466	3.469	3.47
3.25	3.35	3.391	3.433	3.478	3.524	3.559	3.574	3.582	3.584
2.75	3.215	3.292	3.361	3.425	3.483	3.537	3.562	3.577	3.583
3.1	3.37	3.404	3.434	3.466	3.504	3.54	3.554	3.562	3.562
2.73	2.96	3.2	3.374	3.469	3.538	3.588	3.605	3.613	3.617
3.28	3.42	3.465	3.507	3.55	3.603	3.653	3.678	3.689	3.697
3	3.25	3.395	3.494	3.571	3.635	3.693	3.714	3.726	3.727
3.517	3.529	3.546	3.562	3.592	3.63	3.681	3.712	3.737	3.753
3.539	3.552	3.571	3.6	3.639	3.677	3.718	3.737	3.747	3.751
3.498	3.54	3.576	3.607	3.643	3.679	3.708	3.722	3.732	3.736
3.53	3.62	3.659	3.689	3.719	3.758	3.794	3.811	3.821	3.827
3.54	3.65	3.706	3.747	3.783	3.799	3.823	3.831	3.839	3.843
3.58	3.67	3.724	3.753	3.78	3.792	3.804	3.808	3.809	3.81
3.44	3.582	3.636	3.676	3.697	3.715	3.752	3.771	3.797	3.821
3.465	3.535	3.587	3.626	3.658	3.689	3.721	3.741	3.752	3.761
3.29	3.39	3.465	3.544	3.593	3.622	3.653	3.672	3.682	3.686
3.58	3.67	3.725	3.753	3.78	3.793	3.806	3.812	3.814	3.815
2.95	3.425	3.525	3.6	3.676	3.759	3.842	3.883	3.911	3.929
3.45	3.609	3.666	3.71	3.758	3.825	3.901	3.94	3.968	3.948
3.582	3.779	3.82	3.849	3.876	3.892	3.918	3.945	3.973	3.995
3.72	3.84	3.88	3.889	3.903	3.916	3.938	3.961	3.978	3.995
3.658	3.78	3.9	3.961	3.993	4.017	4.051	4.071	4.088	4.105
3.38	3.56	3.634	3.664	3.688	3.731	3.781	3.811	3.837	3.845
3.47	3.78	3.833	3.859	3.884	3.922	3.953	3.975	3.991	4.004
3.25	3.654	3.739	3.777	3.819	3.857	3.905	3.939	3.962	3.974
3.588	3.597	3.609	3.629	3.657	3.692	3.733	3.759	3.772	3.779
3.49	3.554	3.592	3.623	3.655	3.691	3.744	3.771	3.79	3.798
3.33	3.462	3.517	3.559	3.591	3.624	3.659	3.682	3.698	3.707
2.9	3.35	3.668	3.767	3.84	3.904	3.951	3.974	3.983	3.986
3.85	3.946	3.99	4.022	4.058	4.099	4.146	4.174	4.192	4.201
2.98	3.518	3.687	3.793	3.881	3.944	4.004	4.022	4.035	4.042
3.715	3.8	3.833	3.853	3.865	3.879	3.894	3.909	3.916	3.918
3.712	3.72	3.723	3.733	3.748	3.765	3.786	3.801	3.812	3.818
3.2	3.65	3.864	3.949	4.01	4.067	4.113	4.137	4.16	4.17
3.45	3.69	3.789	3.859	3.938	4.025	4.104	4.143	4.167	4.176
3.3	3.575	3.645	3.699	3.761	3.851	3.954	3.996	4.01	4.026
3.69	3.762	3.817	3.857	3.891	3.921	3.949	3.972	3.984	3.992
3.7	3.734	3.758	3.782	3.808	3.833	3.859	3.875	3.888	3.891
3.762	3.785	3.804	3.83	3.866	3.894	3.92	3.939	3.955	3.968
6.26	6.98	7.334	7.479	7.628	7.781	7.879	7.932	7.977	8.02
7.05	7.43	7.569	7.704	7.84	7.937	8.019	8.077	8.118	8.153
6.15	6.89	7.129	7.361	7.601	7.809	nan	nan	8.19	8.254
7.605	7.643	7.692	7.75	7.838	7.94	8.04	8.08	8.109	8.123
7.3	7.44	7.494	7.561	7.641	7.741	7.858	7.897	7.937	7.969
7.62	7.67	7.714	7.769	7.843	7.951	8.057	8.108	8.149	8.185
7.1	7.375	7.483	7.575	7.663	7.771	7.905	7.974	8.026	8.071
6.1	6.47	7.059	7.369	7.678	7.941	8.107	8.175	8.214	8.24
5.65	6.36	6.879	7.254	7.582	7.806	7.956	8.025	8.071	8.112
5.72	6.6	7.049	7.389	7.628	7.791	7.921	7.987	8.042	8.085
7.47	7.54	7.599	7.674	7.782	7.886	7.981	8.034	8.006	8.087
7.59	7.728	7.799	7.862	7.933	8.016	8.11	8.176	8.233	8.279
7.74	7.767	7.797	7.832	7.878	7.936	8.009	8.059	8.101	8.138
7.38	7.485	7.533	7.632	7.739	7.845	7.949	8.001	8.043	8.076
6.92	7.21	7.439	7.569	7.663	7.723	7.763	7.793	7.813	7.828
7.26	7.407	7.442	7.489	7.553	7.638	7.739	7.796	7.842	7.884
6.93	7.313	7.429	7.534	7.653	7.756	7.856	7.92	7.961	7.988
6.55	7.455	7.7	7.914	8.118	8.265	8.382	8.448	8.496	8.534
7.2	7.795	7.934	8.099	8.283	8.453	8.622	8.722	8.783	8.821
6.2	7.45	7.704	7.889	8.033	8.196	8.36	8.427	8.466	8.487
6.1	7.2	7.444	7.559	7.698	7.867	8.029	8.1	8.152	8.189
6.9	7.4	7.619	7.739	7.85	7.964	8.068	8.122	8.172	8.221
6.95	7.36	7.604	7.757	7.892	7.995	8.091	8.151	8.206	8.246
6.2	7.095	7.433	7.634	7.828	7.988	8.141	8.235	8.286	8.313
7.17	7.385	7.539	7.674	7.818	7.938	8.062	8.118	8.154	8.18
8.035	8.065	8.094	8.136	8.166	8.209	8.264	8.298	8.32	8.331
7.95	8.1	8.132	8.164	8.2	8.249	8.298	8.322	8.339	8.351
6.73	7.05	7.369	7.639	7.782	7.913	8.044	8.115	8.17	8.213
6.9	7.41	7.687	7.784	7.865	7.951	8.021	8.057	8.084	8.11
7.3	7.83	7.969	8.039	8.113	8.171	8.219	8.251	8.282	8.308
7.3	7.8	7.854	7.909	7.973	8.046	8.137	8.197	8.235	8.269
7.4	7.7	7.829	7.929	8.018	8.093	8.17	8.224	8.265	8.299
7.6	7.825	7.949	8.039	8.133	8.211	8.273	8.315	8.349	8.379
7.1	7.925	8.079	8.167	8.271	8.367	8.459	8.517	8.554	8.582
7.58	7.69	7.849	7.999	8.168	8.266	8.342	8.399	8.437	8.476
7.59	7.665	7.779	7.894	8.003	8.116	8.257	8.338	8.388	8.429
7.56	7.63	7.749	7.859	7.984	8.104	8.234	8.308	8.352	8.375
3.72	3.99	4.093	4.172	4.243	4.307	4.369	4.402	4.418	4.423
3.98	4.1	4.155	4.211	4.284	4.36	4.433	4.471	4.49	4.5
3.7	3.9	3.986	4.069	4.154	4.236	nan	nan	4.389	4.409
4.105	4.14	4.163	4.184	4.221	4.26	4.296	4.313	4.324	4.328
4.09	4.103	4.12	4.141	4.179	4.235	4.305	4.343	4.366	4.38
4.09	4.103	4.117	4.138	4.171	4.213	4.253	4.28	4.301	4.319
4.22	4.265	4.299	4.328	4.364	4.402	4.45	4.479	4.505	4.524
3.14	3.45	3.685	3.851	4.009	4.155	4.256	4.289	4.307	4.316
3.47	3.72	3.92	4.052	4.193	4.304	4.365	4.391	4.411	4.425
3.12	3.775	3.907	4.009	4.103	4.19	4.258	4.293	4.319	4.339
4.167	4.205	4.242	4.283	4.367	4.4	4.459	4.484	4.493	4.501
4.385	4.394	4.407	4.424	4.453	4.494	4.548	4.578	4.597	4.609
4.31	4.348	4.361	4.375	4.401	4.439	4.491	4.519	4.534	4.543
4.41	4.454	4.477	4.499	4.528	4.563	4.602	4.625	4.649	4.668
4.03	4.13	4.18	4.219	4.259	4.292	4.33	4.357	4.371	4.383
4.07	4.085	4.102	4.119	4.141	4.17	4.204	4.222	4.231	4.239
4.035	4.083	4.112	4.142	4.178	4.204	4.227	4.253	4.265	4.275
3.4	3.85	3.978	4.078	4.206	4.36	4.523	4.619	4.679	4.729
3.8	4.07	4.135	4.211	4.319	4.456	4.629	4.721	4.77	4.79
3.5	3.97	4.14	4.231	4.341	4.471	4.622	4.705	4.752	4.776
nan	4.03	4.18	4.294	4.379	4.466	4.527	4.575	4.616	4.642
3.945	4.138	4.237	4.328	4.425	4.511	4.583	4.62	4.643	4.661
3.77	3.955	4.136	4.244	4.345	4.437	4.516	4.556	4.583	4.598
3.81	4.07	4.087	4.167	4.264	4.377	4.513	4.593	4.641	4.663
3.97	4.084	4.135	4.192	4.251	4.293	4.336	4.359	4.371	4.376
4.472	4.479	4.487	4.497	4.514	4.53	4.555	4.573	4.58	4.588
4.369	4.38	4.392	4.399	4.412	4.432	4.46	4.48	4.491	4.497
4.13	4.37	4.432	4.489	4.553	4.602	4.643	4.68	4.718	4.745
4.135	4.272	4.45	4.488	4.536	4.598	4.662	4.692	4.707	4.715
4.145	4.45	4.508	4.544	4.591	4.65	4.705	4.733	4.751	4.765
4.33	4.405	4.445	4.482	4.541	4.616	4.686	4.725	4.752	4.765
4.425	4.45	4.482	4.519	4.576	4.644	4.718	4.756	4.776	4.792
4.425	4.5	4.573	4.644	4.699	4.74	4.788	4.823	4.847	4.868
4.225	4.45	4.55	4.642	4.688	4.75	4.83	4.873	4.896	4.913
4.305	4.37	4.415	4.463	4.514	4.562	4.603	4.649	4.676	4.7
4.25	4.3	4.346	4.399	4.46	4.516	4.565	4.602	4.625	4.645
4.35	4.41	4.445	4.483	4.528	4.581	4.637	4.671	4.694	4.713
];
Sample_number=size(Velocity,1);

%% create colormap
range=0:size(lajolla,1)-1;
range=range*(Sample_number-1)/(size(lajolla,1)-1)+1;
color=nan(Sample_number,3);
for i=1:3
    color(:,i)=interp1(range,lajolla(:,i),1:Sample_number);
end
%% Process
for i=1:Sample_number
    P0=Pressure;
    V0=Velocity(i,:);
    [mean_P00,eta00]=process(P0,V0);
    mean_P0(i,1:length(mean_P00))=mean_P00;
    eta0(i,1:length(mean_P00))=eta00;
    figure(2)
    semilogy(mean_P00,eta00,'o','markersize',8, 'markerfacecolor',color(i,:),'MarkerEdgeColor', color(i,:));
    hold on;
end
figure(1)
grid on;
box on;
set(gca,'fontsize',16);
xlabel('Pressure (Pa)')
ylabel('Velocity (km/s)')
figure(2)
eta=reshape(eta0,1,[])';
jk=find(eta>0);
eta=eta(jk);
mean_P=reshape(mean_P0,1,[])';
mean_P=mean_P(jk);

%% curve fitting
nihe_y=log(eta);
nihe_x=log(mean_P);
p=polyfit(nihe_x,nihe_y,1);
w1=exp(p(2));w2=p(1);
xi=linspace(min(mean_P),max(mean_P),20);
semilogy(xi,w1.*xi.^(w2),'linewidth',1.5,'color','k');

%% set gca
xlabel('Pressure (Pa)')
ylabel('\eta (Pa^-^1)')
grid on;
box on;
set(gca,'fontsize',16);

%% output
output=[mean_P,eta];
output_nihe=[w1,w2,min(mean_P),max(mean_P)];
save ./Out_sensitivity/Manghnani_1974_out.txt -ascii output
save ./Out_sensitivity/Manghnani_1974_nihe.txt -ascii output_nihe
%%
function [mean_P0,eta0]=process(P0,V0)
    jkf=find(~isnan(P0));
    P=P0(jkf);V=V0(jkf);
    figure(1)
    plot(P,V,'*-');hold on;
    eta0=zeros(1,length(P)-1);
    mean_P0=zeros(1,length(P)-1);
    for j=1:length(P)-1
        dV=V(j+1)-V(j);
        dP=P(j+1)-P(j);
        eta0(j)=dV/V(j)/dP;
        mean_P0(j)=(P(j+1)+P(j))/2;
    end
end

